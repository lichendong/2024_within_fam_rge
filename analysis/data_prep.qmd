---
title: "Add Health Data Preparation for Within-Family Analysis of rGE"
author: "LiChen Dong"
date: "`r lubridate::today()`"
format: 
  html: 
    embed-resources: true
    toc: true 
    toc_depth: 4
editor_options: 
  chunk_output_type: console
---


## Setup

```{r}
#| output: false # This tells R not to print the output of this code chunk

options(conflicts.policy = "depends.ok")
library(tidyverse)
library(lavaan)

path_data <- "../data_local"
```


## Read in data 

### Add health waves

```{r}
load(here::here(path_data, "add_health_core.RData"))
```

### Genetic ID

```{r}
gid <- data.table::fread(here::here(path_data, "AddHealth dbGap ID Link File.dat")) |> as_tibble()
```

### Polygenic score and genetic PCs

```{r}
#ext_pgs <- data.table::fread(here::here(path_data, "ADDHEXTPGS"))
ext_pgs <- read_csv(here::here(path_data, "8.14.24_EXT_PGS_PRSCS.csv")) |>
          mutate(EXT_PGS_PRSCS = scale(EXT_PGS_PRSCS)) |>
          rename(EXT_PGS = EXT_PGS_PRSCS)
#names(ext_pgs) <- c("GFAM", "GID", "EXT_PGS")
genetic_pc <- data.table::fread(here::here(path_data, "ADDHPCA"))
names(genetic_pc) <- c("GFAM","GID",paste0("PC",1:20))

pgs_pc <- left_join(gid, ext_pgs) |> left_join(genetic_pc) |> 
          mutate(AID = as.character(AID))
```

### Genetic ancestry

```{r}
ancestry <- foreign::read.xport(here::here(path_data, "PGS_AH1.xpt")) |> select(AID, ANCESTRY) |>  mutate(AID = as.character(AID), ANCESTRY = factor(ANCESTRY, 0:3, c("eur", "afr", "eas", "his")))

```

## Creating variables

### AID

```{r}
data <- Wave1 |> select(AID)
```

### Sex

```{r}
sex <- Wave1 |> select(AID, BIO_SEX) |> 
       rename(sex = BIO_SEX) |> 
       mutate(sex = replace(sex, sex > 5, NA))

data <- data |> left_join(sex)
```

### Age

```{r}
age <- Wave1 |> select(AID, H1GI1M, H1GI1Y, IMONTH, IYEAR) |> 
                left_join(Wave3 |> select(AID, IMONTH3, IYEAR3)) |> 
                mutate(H1GI1M = replace(H1GI1M, H1GI1M == 96, NA), 
                       H1GI1Y = replace(H1GI1Y, H1GI1Y == 96, NA),
                       IYEAR3 = case_match(IYEAR3, 2001 ~ 101, 2002 ~ 102)) |> 
                mutate(age_1 = IYEAR - H1GI1Y + (IMONTH - H1GI1M)/12, 
                       age_3 = IYEAR3 - H1GI1Y + (IMONTH3 - H1GI1M)/12) |> 
                select(-H1GI1M, -H1GI1Y, -IMONTH, -IYEAR, -IMONTH3, -IYEAR3)

data <- data |> left_join(age)

```

### Race/ethnicity

```{r}
race <- Wave1 |> select(AID, H1GI6A, H1GI6B, H1GI6C, H1GI6D, H1GI6E, H1GI4) |> 
        mutate(across(H1GI6A:H1GI4, ~ replace(.x, .x > 5, NA))) |> 
        rename(white = H1GI6A, african = H1GI6B, native = H1GI6C, asian = H1GI6D, 
               other = H1GI6E, hispanic = H1GI4)

data <- data |> left_join(race)

```

### SES

```{r}
ses <- Wave1 |> select(AID, PA55, H1RM1, H1RF1) |>
       mutate(PA55 = na_if(PA55, 9996),
              H1RM1 = if_else(H1RM1 %in% c(96:99, 11, 12), NA, H1RM1),
              H1RF1 = if_else(H1RF1 %in% c(96:99, 11, 12), NA, H1RF1)) |> 
       rename(income = PA55, edu_mum = H1RM1, edu_dad = H1RF1) |> 
       mutate(edu_mum = dplyr::recode(edu_mum,'3' = 3,
                        '4' = 3,
                        '5' = 3,
                        '6' = 4,
                        '7' = 4,
                        '8' = 5,
                        '9' = 6,
                        '10' = 0),
              edu_dad = dplyr::recode(edu_dad, '3' = 3,
                        '4' = 3,
                        '5' = 3,
                        '6' = 4,
                        '7' = 4,
                        '8' = 5,
                        '9' = 6,
                        '10' = 0))
ses <- ses |> mutate(
  par_ed = NA,
  par_ed = if_else(edu_mum >= edu_dad | is.na(edu_dad), edu_mum, par_ed, missing = par_ed),
  par_ed = if_else(edu_dad > edu_mum | is.na(edu_mum), edu_dad, par_ed, missing = par_ed),
)

ses <- ses |> select(AID, income, par_ed)

data <- data |> left_join(ses)

```


### Parental relationship - parent report

```{r}
pr_parent <- Wave1 %>% select("AID",starts_with("PC34"),"PC44A") |> 
             mutate(across(PC34A:PC44A, ~replace(.x, .x > 5, NA)),
                    PC34A = 6 - PC34A,
                    PC34B = 6 - PC34B,
                    PC34D = 6 - PC34D,
                    PC44A = 6 - PC44A)

# psych::fa.parallel(pr_parent |> select(-AID), fm = "wls", fa = "fa", cor = "poly")

#  lavaan::efa(pr_parent |> select(-AID) |> mutate(across(everything(), as.ordered)), nfactors = 1:2, rotation = "oblimin") |> summary()

data <- data |> left_join(pr_parent)

```


### Parental relationship - child report

```{r}
pr_child <- Wave1 |> select(AID, H1WP9, H1WP10, H1PF1, H1PF2, 
                            H1PF3, H1PF4, H1PF5, H1WP13, 
                            H1WP14, H1PF23, H1PF24, H1PF25) |> 
            mutate(across(H1WP9:H1PF25, ~ replace(.x, .x > 5, NA)),
                   across(starts_with("H1PF"), ~ 6 - .x))

# psych::fa.parallel(pr_child |> select(H1WP9:H1PF25), fm = "wls", fa = "fa", cor = "poly")

#  lavaan::efa(pr_child |> select(H1WP9:H1PF25) |> mutate(across(everything(), as.ordered)), nfactors = 1:2, rotation = "oblimin") |> summary()

data <- data |> left_join(pr_child)

```

### Delinquent peer affiliation

```{r}
del_peer <- Wave1 |> select(AID, H1TO29, H1TO33, H1TO9, H1DS14) |> 
            mutate(across(H1TO29:H1DS14, ~ replace(.x, .x > 5, NA)),
                   across(H1TO29:H1DS14, ~ 4 - .x))
# psych::fa.parallel(del_peer |> select(-AID), fm = "wls", fa = "fa", cor = "poly")

data <- data |> left_join(del_peer)

```

### School connectedness

```{r}
school_con <- Wave1 |> select(AID, H1ED19, H1ED20, H1ED22, H1ED23,
                              H1ED24, H1PR2) |> 
              mutate(across(H1ED19:H1PR2, ~ replace(.x, .x > 5, NA)),
                     across(starts_with("H1ED"), ~ 6 - .x))

# psych::fa.parallel(school_con |> select(-AID), fm = "wls", fa = "fa", cor = "poly")

data <- data |> left_join(school_con)

```

### ASB and SUB

```{r}
asb_wave1 <- Wave1 |> select(AID, H1DS2, H1DS12, H1FV8, H1DS6, 
                             H1DS9, H1DS10, H1DS13, H1DS11, H1FV7, H1DS7) |> 
             mutate(across(H1DS2:H1DS7, ~ replace(.x , .x > 5, NA)),
                    across(H1DS2:H1DS7, ~ replace(.x , .x > 0, 1)))
    
psych::alpha(asb_wave1 |> select(-AID),check.keys=TRUE) |> suppressWarnings()

asb_wave3 <- Wave3 |> select(AID, H3DS1, H3DS5, H3DS18I, H3DS17, 
                             H3DS2, H3DS3, H3DS6, H3DS4, H3DS18H, H3HR23) |> 
             mutate(H3DS17 = case_match(H3DS17, 0 ~ 0,
                                                1:2 ~ 1,
                                                3:4 ~ 2,
                                                5:67 ~ 3)) |> 
             mutate(across(H3DS1:H3HR23, ~ replace(.x , .x > 5, NA)),
                    across(H3DS1:H3HR23, ~ replace(.x , .x > 0, 1)))

psych::alpha(asb_wave3 |> select(-AID),check.keys=TRUE) |> suppressWarnings()

data <- data |> left_join(asb_wave1) |> left_join(asb_wave3)

sub_wave1 <- Wave1 |> select(AID, H1TO15, H1TO17, H1TO5, H1TO32, H1TO36, H1TO42) |> 
             mutate(H1TO15 = replace(H1TO15, H1TO15 == 97, 7),
                    H1TO15 = replace(H1TO15, H1TO15 >= 96, NA),
                    H1TO15 = 7 - H1TO15,
                    H1TO17 = replace(H1TO17, H1TO17 == 97, 7),
                    H1TO17 = replace(H1TO17, H1TO17 >= 96, NA),
                    H1TO17 = 7 - H1TO17,
                    H1TO5 = replace(H1TO5, H1TO5 == 97, 0),
                    H1TO5 = replace(H1TO5, H1TO5 >= 96, NA),
                    H1TO32 = replace(H1TO32, H1TO32 == 997, 0),
                    H1TO32 = replace(H1TO32, H1TO32 >= 996, NA),
                    H1TO32 = replace(H1TO32, H1TO32 > 30, 30),
                    H1TO36 = replace(H1TO36, H1TO36 == 997, 0),
                    H1TO36 = replace(H1TO36, H1TO36 >= 996, NA),
                    H1TO36 = replace(H1TO36, H1TO36 > 30, 30),
                    H1TO42 = replace(H1TO42, H1TO42 == 997, 0),
                    H1TO42 = replace(H1TO42, H1TO42 >= 996, NA),
                    H1TO42 = replace(H1TO42, H1TO42 > 30, 30))

psych::alpha(sub_wave1 |> select(-AID),check.keys=TRUE) |> suppressWarnings()


sub_wave3 <- Wave3 |> select(AID, H3TO38, H3TO40, H3TO7, H3TO110, H3TO113, H3TO119) |> 
             mutate(H3TO38 = replace(H3TO38, H3TO38 == 97, 0),
                    H3TO38 = replace(H3TO38, H3TO38 >= 96, NA),
                    H3TO40 = replace(H3TO40, H3TO40 == 97, 0),
                    H3TO40 = replace(H3TO40, H3TO40 >= 96, NA),
                    H3TO7 = replace(H3TO7, H3TO7 == 97, 0),
                    H3TO7 = replace(H3TO7, H3TO7 >= 96, NA),
                    H3TO110 = replace(H3TO110, H3TO110 == 9997, 0),
                    H3TO110 = replace(H3TO110, H3TO110 >= 9996, NA),
                    H3TO110 = replace(H3TO110, H3TO110 > 30, 30),
                    H3TO113 = replace(H3TO113, H3TO113 == 997, 0),
                    H3TO113 = replace(H3TO113, H3TO113 >= 996, NA),
                    H3TO113 = replace(H3TO113, H3TO113 > 30, 30),
                    H3TO119 = replace(H3TO119, H3TO119 == 997, 0),
                    H3TO119 = replace(H3TO119, H3TO119 >= 996, NA),
                    H3TO119 = replace(H3TO119, H3TO119 > 30, 30))


psych::alpha(sub_wave3 |> select(-AID),check.keys=TRUE) |> suppressWarnings()

data <- data |> left_join(sub_wave1) |> left_join(sub_wave3)

```

### Parent report covariates

```{r}
cov_parent <- Wave1 |> select(AID, PA1, PA2, PA10, 
                              PA61, PA62, PB22, # par sub
                              PC10, PC11, PC12, PC17, # know kid friend
                              PC32) |> 
              mutate(PA2 = replace(PA2, PA2 == 996, NA),
                     PA10 = replace(PA10, PA10 == 6, NA),
                     PA10 = case_match(PA10, 
                                       c(1,3:5) ~ 1,
                                       2 ~ 2),
                     PA61 = replace(PA61, PA61 == 96, NA),
                     PA62 = replace(PA62, PA62 == 96, NA),
                     PB22 = replace(PB22, PB22 >= 96, NA),
                     PC10 = replace(PC10, PC10 == 2, 1),
                     PC10 = replace(PC10, PC10 == 6, NA),
                     PC11 = replace(PC11, PC11 == 6, NA),
                     PC12 = replace(PC12, PC12 == 6, NA),
                     PC17 = replace(PC17, PC17 == 96, NA),
                     PC32 = replace(PC32, PC32 == 6, NA)) |> 
              rename(par_age = PA2, par_sex = PA1, 
                     par_marry = PA10, bad_temper = PC32)

#  lavaan::efa(cov_parent |> select(-AID, -par_age, -par_sex, -par_marry, -PC32) |> mutate(across(everything(), as.ordered)), nfactors = 1:2, rotation = "oblimin") |> summary()

psych::alpha(cov_parent |> select(PA61,PA62, PB22), check.keys=TRUE)
psych::alpha(cov_parent |> select(PC10:PC17), check.keys=TRUE)

data <- data |> left_join(cov_parent)

```

### Child report covariates

```{r}
cov_child <- Wave1 |> select(AID, H1WP1:H1WP7, 
                              H1WP17F, H1WP17G, H1WP17H,
                              H1WP18F, H1WP18G, H1WP18H) |> 
              mutate(across(!AID, ~ replace(.x, .x > 5, NA))) 


# cov_child |> select(-AID) |> psych::fa.parallel(fm = "wls", fa = "fa", cor = "poly")
#  lavaan::efa(cov_child |> select(-AID) |> mutate(across(everything(), as.ordered)), nfactors = 1:3, rotation = "oblimin") |> summary()

data <- data |> left_join(cov_child)

```


### Residualize PGS on PCs

```{r}
pgs_pc <- pgs_pc |> mutate(
  EXT_PGS = lm(EXT_PGS ~ PC1 + PC2 + PC3 + PC4 + PC5 + PC6 + PC7 + 
                         PC8 + PC9 + PC10,
               data = pgs_pc, na.action = "na.exclude") %>% residuals())
```


## Full sample data

Phenotypic variables only for FA

```{r}
data <- gid |> select(AID, FAMID) |> 
        mutate(across(everything(), as.character)) |> 
        left_join(data)

write.table(data,file = here::here(path_data, "withinfamrGE_addh_full_sample_for_fa.csv"),sep = ",", na = ".",row.names = F,col.names  = F)

data |> skimr::skim()
names(data) |> cat()

```

## Read in factor scores

```{r}
fs_1 <- data.table::fread("withinfamrGE_factor_score_part1") |>
        select(V29:V34) |> 
        rename(AID = V29, par_rel_parent = V30, mum_rel_child = V31,
               dad_rel_child = V32, del_peer = V33, school_con = V34) |> 
        mutate(par_rel_child = NA,
               par_rel_child = 
                 if_else(mum_rel_child > dad_rel_child | is.na(dad_rel_child),
                         mum_rel_child, par_rel_child, 
                         missing = par_rel_child),
               par_rel_child = 
                 if_else(dad_rel_child > mum_rel_child | is.na(mum_rel_child),
                         dad_rel_child, par_rel_child, 
                         missing = par_rel_child)) |> 
        select(-mum_rel_child, -dad_rel_child) |> 
        relocate(par_rel_child, .after = par_rel_parent)

fs_2 <- data.table::fread("withinfamrGE_factor_score_part2") |>
        select(V21:V23) |> 
        rename(AID = V21, asb_wave1 = V22, asb_wave3 = V23)

fs_3 <- data.table::fread("withinfamrGE_factor_score_part3") |>
        select(V7:V8) |> 
        rename(AID = V7, sub_wave1 = V8)

fs_4 <- data.table::fread("withinfamrGE_factor_score_part4") |>
        select(V7:V8) |> 
        rename(AID = V7, sub_wave3 = V8)

fs_5 <- data.table::fread("withinfamrGE_factor_score_part5") |>
        select(V4:V5) |> 
        rename(AID = V4, par_sub = V5)

fs_6 <- data.table::fread("withinfamrGE_factor_score_part6") |>
        select(V14:V16) |> 
        rename(AID = V14, autonomy = V15, par_involvement = V16)

fs_all <- fs_1 |> left_join(fs_2) |> left_join(fs_3) |> 
                  left_join(fs_4) |> left_join(fs_5) |> 
                  left_join(fs_6) |> mutate(AID = as.character(AID))
```


## Within family data

### Joining data

```{r}
data_within <- pgs_pc |> select(-starts_with("PC")) |> left_join(ancestry) |> 
               left_join(data |> select(AID, sex, age_1, age_3, white,
                                        african, native, asian, other,
                                        hispanic, income, par_ed, par_age,
                                        par_sex, par_marry, bad_temper)) |>
               left_join(fs_all)

data_within |> skimr::skim()

data_within |> select(where(is.numeric), -starts_with("PC"), -ends_with("ID")) |> cor(use = "pair") |> corrplot::corrplot.mixed()
```


### Select all individuals in families

```{r}
fam_id <- table(data_within$FAMID) |> names()
fam_id <- fam_id[which(table(data_within$FAMID) > 1)]

data_within <- data_within |> filter(FAMID %in% fam_id)
```


### Select same ancestry families

```{r}
#data_within <- data_within |> filter(ANCESTRY == "eur")

Mode <- function(x) {
  ux <- unique(x)
  ux[which.max(tabulate(match(x, ux)))]
}

famid_na_ancestry <- data_within |> group_by(FAMID) |> 
  summarise(fam_ancestry = Mode(ANCESTRY)) |> 
  filter(is.na(fam_ancestry)) |> 
  pull(FAMID) 

data_within <- data_within |> filter(!FAMID %in% famid_na_ancestry)

data_within |> filter(FAMID %in% famid_na_ancestry) |> print(n = 1000)

famid_ancestry <- data_within |> group_by(FAMID) |> 
  summarise(fam_ancestry = Mode(ANCESTRY))

famid_inconsistent <- data_within |> left_join(famid_ancestry) |> 
  filter(ANCESTRY != fam_ancestry) |> pull(FAMID)

data_within |> filter(FAMID %in% famid_inconsistent) |> arrange(FAMID) |> print(n = 100)

data_within <- data_within |> filter(!FAMID %in% famid_inconsistent)
```

### Descriptives

```{r}
skimr::skim(data_within)
length(unique(data_within$FAMID))
mean(data_within$age_1, na.rm = T)
sd(data_within$age_1, na.rm = T)
mean(data_within$age_3, na.rm = T)
sd(data_within$age_3, na.rm = T)
mean(data_within$income, na.rm = T)
sd(data_within$income, na.rm = T)
mean(data_within$par_age, na.rm = T)
sd(data_within$par_age, na.rm = T)

mean(data_within$par_rel_parent, na.rm = T)
sd(data_within$par_rel_parent, na.rm = T)
mean(data_within$par_rel_child, na.rm = T)
sd(data_within$par_rel_child, na.rm = T)
mean(data_within$del_peer, na.rm = T)
sd(data_within$del_peer, na.rm = T)
mean(data_within$school_con, na.rm = T)
sd(data_within$school_con, na.rm = T)

mean(data_within$asb_wave1, na.rm = T)
sd(data_within$asb_wave1, na.rm = T)
mean(data_within$asb_wave3, na.rm = T)
sd(data_within$asb_wave3, na.rm = T)
mean(data_within$sub_wave1, na.rm = T)
sd(data_within$sub_wave1, na.rm = T)
mean(data_within$sub_wave3, na.rm = T)
sd(data_within$sub_wave3, na.rm = T)

mean(data_within$par_sub, na.rm = T)
sd(data_within$par_sub, na.rm = T)

table(data_within$sex)
table(data_within$ANCESTRY)
table(data_within$par_ed)
table(data_within$par_sex)
table(data_within$par_marry)


table(data_within$white)
table(data_within$african)
table(data_within$native)
table(data_within$asian)
table(data_within$other)
table(data_within$hispanic)

VCA::anovaVCA(white ~ FAMID, Data = data_within |> as.data.frame())
VCA::anovaVCA(african ~ FAMID, Data = data_within |> as.data.frame())
VCA::anovaVCA(native ~ FAMID, Data = data_within |> as.data.frame())
VCA::anovaVCA(asian ~ FAMID, Data = data_within |> as.data.frame())
VCA::anovaVCA(other ~ FAMID, Data = data_within |> as.data.frame())
VCA::anovaVCA(hispanic ~ FAMID, Data = data_within |> as.data.frame())


VCA::anovaVCA(age_1 ~ FAMID, Data = data_within |> as.data.frame())
VCA::anovaVCA(age_3 ~ FAMID, Data = data_within |> as.data.frame())
VCA::anovaVCA(par_age ~ FAMID, Data = data_within |> as.data.frame())
VCA::anovaVCA(par_sex ~ FAMID, Data = data_within |> as.data.frame())
VCA::anovaVCA(par_marry ~ FAMID, Data = data_within |> as.data.frame())
VCA::anovaVCA(par_sub ~ FAMID, Data = data_within |> as.data.frame())

VCA::anovaVCA(sex ~ FAMID, Data = data_within |> as.data.frame())
VCA::anovaVCA(ANCESTRY ~ FAMID, Data = data_within |> mutate(ANCESTRY = ANCESTRY |> factor() |> as.numeric()) |>  as.data.frame())

VCA::anovaVCA(EXT_PGS ~ FAMID, Data = data_within |> mutate(ANCESTRY = ANCESTRY |> factor() |> as.numeric()) |>  as.data.frame())


VCA::anovaVCA(par_rel_parent ~ FAMID, Data = data_within |> as.data.frame())
VCA::anovaVCA(par_rel_child ~ FAMID, Data = data_within |> as.data.frame())
VCA::anovaVCA(del_peer ~ FAMID, Data = data_within |> as.data.frame())
VCA::anovaVCA(school_con ~ FAMID, Data = data_within |> as.data.frame())


VCA::anovaVCA(asb_wave1 ~ FAMID, Data = data_within |> as.data.frame())
VCA::anovaVCA(asb_wave3 ~ FAMID, Data = data_within |> as.data.frame())
VCA::anovaVCA(sub_wave1 ~ FAMID, Data = data_within |> as.data.frame())
VCA::anovaVCA(sub_wave3 ~ FAMID, Data = data_within |> as.data.frame())

```


## Write data to csv for analysis

Change ancestry to numeric coding for Mplus variable definition

```{r}
data_within <- data_within |> 
               mutate(ANCESTRY = factor(ANCESTRY, 
                                        c("eur", "afr", "eas", "his"),
                                        1:4)) |> 
               group_by(FAMID) |> 
               mutate(ANCESTRY = Mode(ANCESTRY)) |> 
               ungroup()
```

Write data

```{r}
write.table(data_within,file = here::here(path_data, "withinfamrGE_addh.csv"),sep = ",", na = ".",row.names = F,col.names  = F)

names(data_within) |> cat()
```


